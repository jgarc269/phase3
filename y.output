Terminals unused in grammar

   UMINUS


Grammar

    0 $accept: prog_start $end

    1 prog_start: %empty
    2           | Function prog_start

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_loop END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY Statement_loop END_BODY

    4 Declaration_loop: Declaration SEMICOLON Declaration_loop
    5                 | %empty

    6 Declaration: Ident_loop COLON INTEGER
    7            | Ident_loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    8 Ident_loop: Ident
    9           | Ident COMMA Ident_loop

   10 Statement: Statement1
   11          | Statement2
   12          | Statement3
   13          | Statement4
   14          | Statement5
   15          | Statement6
   16          | Statement7
   17          | Statement8
   18          | Statement9

   19 Statement1: Var ASSIGN Expression

   20 Statement2: IF Bool_Expr THEN Statement_loop ElseStatement ENDIF

   21 Statement3: WHILE Bool_Expr BEGINLOOP Statement_loop ENDLOOP

   22 Statement4: DO BEGINLOOP Statement_loop ENDLOOP WHILE Bool_Expr

   23 Statement5: FOR Var ASSIGN NUMBER SEMICOLON Bool_Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement_loop ENDLOOP

   24 Statement6: READ Var_loop

   25 Statement7: WRITE Var_loop

   26 Statement8: CONTINUE

   27 Statement9: RETURN Expression

   28 Statement_loop: Statement SEMICOLON Statement_loop
   29               | Statement SEMICOLON

   30 ElseStatement: ELSE Statement_loop
   31              | %empty

   32 Bool_Expr: Relation_And_Expr
   33          | Relation_Expr OR Bool_Expr

   34 Relation_And_Expr: Relation_Expr
   35                  | Relation_Expr AND Relation_And_Expr

   36 Relation_Expr: NOT Relation_Expr_loop
   37              | Relation_Expr_loop

   38 Relation_Expr_loop: Expression Comp Expression
   39                   | TRUE
   40                   | FALSE
   41                   | L_PAREN Bool_Expr R_PAREN

   42 Comp: EQ
   43     | NEQ
   44     | LT
   45     | GT
   46     | LTE
   47     | GTE

   48 Expression: Multiplicative_Expr
   49           | Multiplicative_Expr SUB Expression
   50           | Multiplicative_Expr ADD Expression

   51 Expression_loop: Expression COMMA Expression_loop
   52                | Expression
   53                | %empty

   54 Multiplicative_Expr: Term
   55                    | Term MOD Multiplicative_Expr
   56                    | Term DIV Multiplicative_Expr
   57                    | Term MULT Multiplicative_Expr

   58 Term: Var
   59     | NUMBER
   60     | SUB Var
   61     | SUB NUMBER
   62     | L_PAREN Expression R_PAREN
   63     | SUB L_PAREN Expression R_PAREN
   64     | Ident L_PAREN Expression_loop R_PAREN

   65 Var: Ident
   66    | Ident L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

   67 Var_loop: Var
   68         | Var COMMA Var_loop

   69 Ident: IDENT


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENT (258) 69
NUMBER (259) 7 23 59 61
FUNCTION (260) 3
BEGIN_PARAMS (261) 3
END_PARAMS (262) 3
BEGIN_LOCALS (263) 3
END_LOCALS (264) 3
BEGIN_BODY (265) 3
END_BODY (266) 3
INTEGER (267) 6 7
ARRAY (268) 7
OF (269) 7
IF (270) 20
THEN (271) 20
ENDIF (272) 20
ELSE (273) 30
WHILE (274) 21 22
DO (275) 22
FOR (276) 23
BEGINLOOP (277) 21 22 23
ENDLOOP (278) 21 22 23
CONTINUE (279) 26
READ (280) 24
WRITE (281) 25
TRUE (282) 39
FALSE (283) 40
RETURN (284) 27
SEMICOLON (285) 3 4 23 28 29
COLON (286) 6 7
COMMA (287) 9 51 68
L_PAREN (288) 41 62 63 64
R_PAREN (289) 41 62 63 64
L_SQUARE_BRACKET (290) 7 66
R_SQUARE_BRACKET (291) 7 66
AND (292) 35
OR (293) 33
SUB (294) 49 60 61 63
ADD (295) 50
MULT (296) 57
DIV (297) 56
MOD (298) 55
EQ (299) 42
NEQ (300) 43
LT (301) 44
GT (302) 45
LTE (303) 46
GTE (304) 47
ASSIGN (305) 19 23
NOT (306) 36
UMINUS (307)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
prog_start (54)
    on left: 1 2, on right: 0 2
Function (55)
    on left: 3, on right: 2
Declaration_loop (56)
    on left: 4 5, on right: 3 4
Declaration (57)
    on left: 6 7, on right: 4
Ident_loop (58)
    on left: 8 9, on right: 6 7 9
Statement (59)
    on left: 10 11 12 13 14 15 16 17 18, on right: 28 29
Statement1 (60)
    on left: 19, on right: 10
Statement2 (61)
    on left: 20, on right: 11
Statement3 (62)
    on left: 21, on right: 12
Statement4 (63)
    on left: 22, on right: 13
Statement5 (64)
    on left: 23, on right: 14
Statement6 (65)
    on left: 24, on right: 15
Statement7 (66)
    on left: 25, on right: 16
Statement8 (67)
    on left: 26, on right: 17
Statement9 (68)
    on left: 27, on right: 18
Statement_loop (69)
    on left: 28 29, on right: 3 20 21 22 23 28 30
ElseStatement (70)
    on left: 30 31, on right: 20
Bool_Expr (71)
    on left: 32 33, on right: 20 21 22 23 33 41
Relation_And_Expr (72)
    on left: 34 35, on right: 32 35
Relation_Expr (73)
    on left: 36 37, on right: 33 34 35
Relation_Expr_loop (74)
    on left: 38 39 40 41, on right: 36 37
Comp (75)
    on left: 42 43 44 45 46 47, on right: 38
Expression (76)
    on left: 48 49 50, on right: 19 23 27 38 49 50 51 52 62 63 66
Expression_loop (77)
    on left: 51 52 53, on right: 51 64
Multiplicative_Expr (78)
    on left: 54 55 56 57, on right: 48 49 50 55 56 57
Term (79)
    on left: 58 59 60 61 62 63 64, on right: 54 55 56 57
Var (80)
    on left: 65 66, on right: 19 23 58 60 67 68
Var_loop (81)
    on left: 67 68, on right: 24 25 68
Ident (82)
    on left: 69, on right: 3 8 9 64 65 66


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (prog_start)

    prog_start  go to state 2
    Function    go to state 3


State 1

    3 Function: FUNCTION . Ident SEMICOLON BEGIN_PARAMS Declaration_loop END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY Statement_loop END_BODY

    IDENT  shift, and go to state 4

    Ident  go to state 5


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 6


State 3

    2 prog_start: Function . prog_start

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (prog_start)

    prog_start  go to state 7
    Function    go to state 3


State 4

   69 Ident: IDENT .

    $default  reduce using rule 69 (Ident)


State 5

    3 Function: FUNCTION Ident . SEMICOLON BEGIN_PARAMS Declaration_loop END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY Statement_loop END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: prog_start $end .

    $default  accept


State 7

    2 prog_start: Function prog_start .

    $default  reduce using rule 2 (prog_start)


State 8

    3 Function: FUNCTION Ident SEMICOLON . BEGIN_PARAMS Declaration_loop END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY Statement_loop END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS . Declaration_loop END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY Statement_loop END_BODY

    IDENT  shift, and go to state 4

    $default  reduce using rule 5 (Declaration_loop)

    Declaration_loop  go to state 10
    Declaration       go to state 11
    Ident_loop        go to state 12
    Ident             go to state 13


State 10

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_loop . END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY Statement_loop END_BODY

    END_PARAMS  shift, and go to state 14


State 11

    4 Declaration_loop: Declaration . SEMICOLON Declaration_loop

    SEMICOLON  shift, and go to state 15


State 12

    6 Declaration: Ident_loop . COLON INTEGER
    7            | Ident_loop . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 16


State 13

    8 Ident_loop: Ident .
    9           | Ident . COMMA Ident_loop

    COMMA  shift, and go to state 17

    $default  reduce using rule 8 (Ident_loop)


State 14

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_loop END_PARAMS . BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY Statement_loop END_BODY

    BEGIN_LOCALS  shift, and go to state 18


State 15

    4 Declaration_loop: Declaration SEMICOLON . Declaration_loop

    IDENT  shift, and go to state 4

    $default  reduce using rule 5 (Declaration_loop)

    Declaration_loop  go to state 19
    Declaration       go to state 11
    Ident_loop        go to state 12
    Ident             go to state 13


State 16

    6 Declaration: Ident_loop COLON . INTEGER
    7            | Ident_loop COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 20
    ARRAY    shift, and go to state 21


State 17

    9 Ident_loop: Ident COMMA . Ident_loop

    IDENT  shift, and go to state 4

    Ident_loop  go to state 22
    Ident       go to state 13


State 18

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_loop END_PARAMS BEGIN_LOCALS . Declaration_loop END_LOCALS BEGIN_BODY Statement_loop END_BODY

    IDENT  shift, and go to state 4

    $default  reduce using rule 5 (Declaration_loop)

    Declaration_loop  go to state 23
    Declaration       go to state 11
    Ident_loop        go to state 12
    Ident             go to state 13


State 19

    4 Declaration_loop: Declaration SEMICOLON Declaration_loop .

    $default  reduce using rule 4 (Declaration_loop)


State 20

    6 Declaration: Ident_loop COLON INTEGER .

    $default  reduce using rule 6 (Declaration)


State 21

    7 Declaration: Ident_loop COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 24


State 22

    9 Ident_loop: Ident COMMA Ident_loop .

    $default  reduce using rule 9 (Ident_loop)


State 23

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_loop END_PARAMS BEGIN_LOCALS Declaration_loop . END_LOCALS BEGIN_BODY Statement_loop END_BODY

    END_LOCALS  shift, and go to state 25


State 24

    7 Declaration: Ident_loop COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 26


State 25

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_loop END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS . BEGIN_BODY Statement_loop END_BODY

    BEGIN_BODY  shift, and go to state 27


State 26

    7 Declaration: Ident_loop COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 28


State 27

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_loop END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY . Statement_loop END_BODY

    IDENT     shift, and go to state 4
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    Statement       go to state 37
    Statement1      go to state 38
    Statement2      go to state 39
    Statement3      go to state 40
    Statement4      go to state 41
    Statement5      go to state 42
    Statement6      go to state 43
    Statement7      go to state 44
    Statement8      go to state 45
    Statement9      go to state 46
    Statement_loop  go to state 47
    Var             go to state 48
    Ident           go to state 49


State 28

    7 Declaration: Ident_loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 50


State 29

   20 Statement2: IF . Bool_Expr THEN Statement_loop ElseStatement ENDIF

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    SUB      shift, and go to state 55
    NOT      shift, and go to state 56

    Bool_Expr            go to state 57
    Relation_And_Expr    go to state 58
    Relation_Expr        go to state 59
    Relation_Expr_loop   go to state 60
    Expression           go to state 61
    Multiplicative_Expr  go to state 62
    Term                 go to state 63
    Var                  go to state 64
    Ident                go to state 65


State 30

   21 Statement3: WHILE . Bool_Expr BEGINLOOP Statement_loop ENDLOOP

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    SUB      shift, and go to state 55
    NOT      shift, and go to state 56

    Bool_Expr            go to state 66
    Relation_And_Expr    go to state 58
    Relation_Expr        go to state 59
    Relation_Expr_loop   go to state 60
    Expression           go to state 61
    Multiplicative_Expr  go to state 62
    Term                 go to state 63
    Var                  go to state 64
    Ident                go to state 65


State 31

   22 Statement4: DO . BEGINLOOP Statement_loop ENDLOOP WHILE Bool_Expr

    BEGINLOOP  shift, and go to state 67


State 32

   23 Statement5: FOR . Var ASSIGN NUMBER SEMICOLON Bool_Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement_loop ENDLOOP

    IDENT  shift, and go to state 4

    Var    go to state 68
    Ident  go to state 49


State 33

   26 Statement8: CONTINUE .

    $default  reduce using rule 26 (Statement8)


State 34

   24 Statement6: READ . Var_loop

    IDENT  shift, and go to state 4

    Var       go to state 69
    Var_loop  go to state 70
    Ident     go to state 49


State 35

   25 Statement7: WRITE . Var_loop

    IDENT  shift, and go to state 4

    Var       go to state 69
    Var_loop  go to state 71
    Ident     go to state 49


State 36

   27 Statement9: RETURN . Expression

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 72
    SUB      shift, and go to state 55

    Expression           go to state 73
    Multiplicative_Expr  go to state 62
    Term                 go to state 63
    Var                  go to state 64
    Ident                go to state 65


State 37

   28 Statement_loop: Statement . SEMICOLON Statement_loop
   29               | Statement . SEMICOLON

    SEMICOLON  shift, and go to state 74


State 38

   10 Statement: Statement1 .

    $default  reduce using rule 10 (Statement)


State 39

   11 Statement: Statement2 .

    $default  reduce using rule 11 (Statement)


State 40

   12 Statement: Statement3 .

    $default  reduce using rule 12 (Statement)


State 41

   13 Statement: Statement4 .

    $default  reduce using rule 13 (Statement)


State 42

   14 Statement: Statement5 .

    $default  reduce using rule 14 (Statement)


State 43

   15 Statement: Statement6 .

    $default  reduce using rule 15 (Statement)


State 44

   16 Statement: Statement7 .

    $default  reduce using rule 16 (Statement)


State 45

   17 Statement: Statement8 .

    $default  reduce using rule 17 (Statement)


State 46

   18 Statement: Statement9 .

    $default  reduce using rule 18 (Statement)


State 47

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_loop END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY Statement_loop . END_BODY

    END_BODY  shift, and go to state 75


State 48

   19 Statement1: Var . ASSIGN Expression

    ASSIGN  shift, and go to state 76


State 49

   65 Var: Ident .
   66    | Ident . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 77

    $default  reduce using rule 65 (Var)


State 50

    7 Declaration: Ident_loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 78


State 51

   59 Term: NUMBER .

    $default  reduce using rule 59 (Term)


State 52

   39 Relation_Expr_loop: TRUE .

    $default  reduce using rule 39 (Relation_Expr_loop)


State 53

   40 Relation_Expr_loop: FALSE .

    $default  reduce using rule 40 (Relation_Expr_loop)


State 54

   41 Relation_Expr_loop: L_PAREN . Bool_Expr R_PAREN
   62 Term: L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    SUB      shift, and go to state 55
    NOT      shift, and go to state 56

    Bool_Expr            go to state 79
    Relation_And_Expr    go to state 58
    Relation_Expr        go to state 59
    Relation_Expr_loop   go to state 60
    Expression           go to state 80
    Multiplicative_Expr  go to state 62
    Term                 go to state 63
    Var                  go to state 64
    Ident                go to state 65


State 55

   60 Term: SUB . Var
   61     | SUB . NUMBER
   63     | SUB . L_PAREN Expression R_PAREN

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 81
    L_PAREN  shift, and go to state 82

    Var    go to state 83
    Ident  go to state 49


State 56

   36 Relation_Expr: NOT . Relation_Expr_loop

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    SUB      shift, and go to state 55

    Relation_Expr_loop   go to state 84
    Expression           go to state 61
    Multiplicative_Expr  go to state 62
    Term                 go to state 63
    Var                  go to state 64
    Ident                go to state 65


State 57

   20 Statement2: IF Bool_Expr . THEN Statement_loop ElseStatement ENDIF

    THEN  shift, and go to state 85


State 58

   32 Bool_Expr: Relation_And_Expr .

    $default  reduce using rule 32 (Bool_Expr)


State 59

   33 Bool_Expr: Relation_Expr . OR Bool_Expr
   34 Relation_And_Expr: Relation_Expr .
   35                  | Relation_Expr . AND Relation_And_Expr

    AND  shift, and go to state 86
    OR   shift, and go to state 87

    $default  reduce using rule 34 (Relation_And_Expr)


State 60

   37 Relation_Expr: Relation_Expr_loop .

    $default  reduce using rule 37 (Relation_Expr)


State 61

   38 Relation_Expr_loop: Expression . Comp Expression

    EQ   shift, and go to state 88
    NEQ  shift, and go to state 89
    LT   shift, and go to state 90
    GT   shift, and go to state 91
    LTE  shift, and go to state 92
    GTE  shift, and go to state 93

    Comp  go to state 94


State 62

   48 Expression: Multiplicative_Expr .
   49           | Multiplicative_Expr . SUB Expression
   50           | Multiplicative_Expr . ADD Expression

    SUB  shift, and go to state 95
    ADD  shift, and go to state 96

    $default  reduce using rule 48 (Expression)


State 63

   54 Multiplicative_Expr: Term .
   55                    | Term . MOD Multiplicative_Expr
   56                    | Term . DIV Multiplicative_Expr
   57                    | Term . MULT Multiplicative_Expr

    MULT  shift, and go to state 97
    DIV   shift, and go to state 98
    MOD   shift, and go to state 99

    $default  reduce using rule 54 (Multiplicative_Expr)


State 64

   58 Term: Var .

    $default  reduce using rule 58 (Term)


State 65

   64 Term: Ident . L_PAREN Expression_loop R_PAREN
   65 Var: Ident .
   66    | Ident . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 100
    L_SQUARE_BRACKET  shift, and go to state 77

    $default  reduce using rule 65 (Var)


State 66

   21 Statement3: WHILE Bool_Expr . BEGINLOOP Statement_loop ENDLOOP

    BEGINLOOP  shift, and go to state 101


State 67

   22 Statement4: DO BEGINLOOP . Statement_loop ENDLOOP WHILE Bool_Expr

    IDENT     shift, and go to state 4
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    Statement       go to state 37
    Statement1      go to state 38
    Statement2      go to state 39
    Statement3      go to state 40
    Statement4      go to state 41
    Statement5      go to state 42
    Statement6      go to state 43
    Statement7      go to state 44
    Statement8      go to state 45
    Statement9      go to state 46
    Statement_loop  go to state 102
    Var             go to state 48
    Ident           go to state 49


State 68

   23 Statement5: FOR Var . ASSIGN NUMBER SEMICOLON Bool_Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement_loop ENDLOOP

    ASSIGN  shift, and go to state 103


State 69

   67 Var_loop: Var .
   68         | Var . COMMA Var_loop

    COMMA  shift, and go to state 104

    $default  reduce using rule 67 (Var_loop)


State 70

   24 Statement6: READ Var_loop .

    $default  reduce using rule 24 (Statement6)


State 71

   25 Statement7: WRITE Var_loop .

    $default  reduce using rule 25 (Statement7)


State 72

   62 Term: L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 72
    SUB      shift, and go to state 55

    Expression           go to state 105
    Multiplicative_Expr  go to state 62
    Term                 go to state 63
    Var                  go to state 64
    Ident                go to state 65


State 73

   27 Statement9: RETURN Expression .

    $default  reduce using rule 27 (Statement9)


State 74

   28 Statement_loop: Statement SEMICOLON . Statement_loop
   29               | Statement SEMICOLON .

    IDENT     shift, and go to state 4
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    $default  reduce using rule 29 (Statement_loop)

    Statement       go to state 37
    Statement1      go to state 38
    Statement2      go to state 39
    Statement3      go to state 40
    Statement4      go to state 41
    Statement5      go to state 42
    Statement6      go to state 43
    Statement7      go to state 44
    Statement8      go to state 45
    Statement9      go to state 46
    Statement_loop  go to state 106
    Var             go to state 48
    Ident           go to state 49


State 75

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_loop END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY Statement_loop END_BODY .

    $default  reduce using rule 3 (Function)


State 76

   19 Statement1: Var ASSIGN . Expression

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 72
    SUB      shift, and go to state 55

    Expression           go to state 107
    Multiplicative_Expr  go to state 62
    Term                 go to state 63
    Var                  go to state 64
    Ident                go to state 65


State 77

   66 Var: Ident L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 72
    SUB      shift, and go to state 55

    Expression           go to state 108
    Multiplicative_Expr  go to state 62
    Term                 go to state 63
    Var                  go to state 64
    Ident                go to state 65


State 78

    7 Declaration: Ident_loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 7 (Declaration)


State 79

   41 Relation_Expr_loop: L_PAREN Bool_Expr . R_PAREN

    R_PAREN  shift, and go to state 109


State 80

   38 Relation_Expr_loop: Expression . Comp Expression
   62 Term: L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 110
    EQ       shift, and go to state 88
    NEQ      shift, and go to state 89
    LT       shift, and go to state 90
    GT       shift, and go to state 91
    LTE      shift, and go to state 92
    GTE      shift, and go to state 93

    Comp  go to state 94


State 81

   61 Term: SUB NUMBER .

    $default  reduce using rule 61 (Term)


State 82

   63 Term: SUB L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 72
    SUB      shift, and go to state 55

    Expression           go to state 111
    Multiplicative_Expr  go to state 62
    Term                 go to state 63
    Var                  go to state 64
    Ident                go to state 65


State 83

   60 Term: SUB Var .

    $default  reduce using rule 60 (Term)


State 84

   36 Relation_Expr: NOT Relation_Expr_loop .

    $default  reduce using rule 36 (Relation_Expr)


State 85

   20 Statement2: IF Bool_Expr THEN . Statement_loop ElseStatement ENDIF

    IDENT     shift, and go to state 4
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    Statement       go to state 37
    Statement1      go to state 38
    Statement2      go to state 39
    Statement3      go to state 40
    Statement4      go to state 41
    Statement5      go to state 42
    Statement6      go to state 43
    Statement7      go to state 44
    Statement8      go to state 45
    Statement9      go to state 46
    Statement_loop  go to state 112
    Var             go to state 48
    Ident           go to state 49


State 86

   35 Relation_And_Expr: Relation_Expr AND . Relation_And_Expr

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    SUB      shift, and go to state 55
    NOT      shift, and go to state 56

    Relation_And_Expr    go to state 113
    Relation_Expr        go to state 114
    Relation_Expr_loop   go to state 60
    Expression           go to state 61
    Multiplicative_Expr  go to state 62
    Term                 go to state 63
    Var                  go to state 64
    Ident                go to state 65


State 87

   33 Bool_Expr: Relation_Expr OR . Bool_Expr

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    SUB      shift, and go to state 55
    NOT      shift, and go to state 56

    Bool_Expr            go to state 115
    Relation_And_Expr    go to state 58
    Relation_Expr        go to state 59
    Relation_Expr_loop   go to state 60
    Expression           go to state 61
    Multiplicative_Expr  go to state 62
    Term                 go to state 63
    Var                  go to state 64
    Ident                go to state 65


State 88

   42 Comp: EQ .

    $default  reduce using rule 42 (Comp)


State 89

   43 Comp: NEQ .

    $default  reduce using rule 43 (Comp)


State 90

   44 Comp: LT .

    $default  reduce using rule 44 (Comp)


State 91

   45 Comp: GT .

    $default  reduce using rule 45 (Comp)


State 92

   46 Comp: LTE .

    $default  reduce using rule 46 (Comp)


State 93

   47 Comp: GTE .

    $default  reduce using rule 47 (Comp)


State 94

   38 Relation_Expr_loop: Expression Comp . Expression

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 72
    SUB      shift, and go to state 55

    Expression           go to state 116
    Multiplicative_Expr  go to state 62
    Term                 go to state 63
    Var                  go to state 64
    Ident                go to state 65


State 95

   49 Expression: Multiplicative_Expr SUB . Expression

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 72
    SUB      shift, and go to state 55

    Expression           go to state 117
    Multiplicative_Expr  go to state 62
    Term                 go to state 63
    Var                  go to state 64
    Ident                go to state 65


State 96

   50 Expression: Multiplicative_Expr ADD . Expression

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 72
    SUB      shift, and go to state 55

    Expression           go to state 118
    Multiplicative_Expr  go to state 62
    Term                 go to state 63
    Var                  go to state 64
    Ident                go to state 65


State 97

   57 Multiplicative_Expr: Term MULT . Multiplicative_Expr

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 72
    SUB      shift, and go to state 55

    Multiplicative_Expr  go to state 119
    Term                 go to state 63
    Var                  go to state 64
    Ident                go to state 65


State 98

   56 Multiplicative_Expr: Term DIV . Multiplicative_Expr

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 72
    SUB      shift, and go to state 55

    Multiplicative_Expr  go to state 120
    Term                 go to state 63
    Var                  go to state 64
    Ident                go to state 65


State 99

   55 Multiplicative_Expr: Term MOD . Multiplicative_Expr

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 72
    SUB      shift, and go to state 55

    Multiplicative_Expr  go to state 121
    Term                 go to state 63
    Var                  go to state 64
    Ident                go to state 65


State 100

   64 Term: Ident L_PAREN . Expression_loop R_PAREN

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 72
    SUB      shift, and go to state 55

    $default  reduce using rule 53 (Expression_loop)

    Expression           go to state 122
    Expression_loop      go to state 123
    Multiplicative_Expr  go to state 62
    Term                 go to state 63
    Var                  go to state 64
    Ident                go to state 65


State 101

   21 Statement3: WHILE Bool_Expr BEGINLOOP . Statement_loop ENDLOOP

    IDENT     shift, and go to state 4
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    Statement       go to state 37
    Statement1      go to state 38
    Statement2      go to state 39
    Statement3      go to state 40
    Statement4      go to state 41
    Statement5      go to state 42
    Statement6      go to state 43
    Statement7      go to state 44
    Statement8      go to state 45
    Statement9      go to state 46
    Statement_loop  go to state 124
    Var             go to state 48
    Ident           go to state 49


State 102

   22 Statement4: DO BEGINLOOP Statement_loop . ENDLOOP WHILE Bool_Expr

    ENDLOOP  shift, and go to state 125


State 103

   23 Statement5: FOR Var ASSIGN . NUMBER SEMICOLON Bool_Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement_loop ENDLOOP

    NUMBER  shift, and go to state 126


State 104

   68 Var_loop: Var COMMA . Var_loop

    IDENT  shift, and go to state 4

    Var       go to state 69
    Var_loop  go to state 127
    Ident     go to state 49


State 105

   62 Term: L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 110


State 106

   28 Statement_loop: Statement SEMICOLON Statement_loop .

    $default  reduce using rule 28 (Statement_loop)


State 107

   19 Statement1: Var ASSIGN Expression .

    $default  reduce using rule 19 (Statement1)


State 108

   66 Var: Ident L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 128


State 109

   41 Relation_Expr_loop: L_PAREN Bool_Expr R_PAREN .

    $default  reduce using rule 41 (Relation_Expr_loop)


State 110

   62 Term: L_PAREN Expression R_PAREN .

    $default  reduce using rule 62 (Term)


State 111

   63 Term: SUB L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 129


State 112

   20 Statement2: IF Bool_Expr THEN Statement_loop . ElseStatement ENDIF

    ELSE  shift, and go to state 130

    $default  reduce using rule 31 (ElseStatement)

    ElseStatement  go to state 131


State 113

   35 Relation_And_Expr: Relation_Expr AND Relation_And_Expr .

    $default  reduce using rule 35 (Relation_And_Expr)


State 114

   34 Relation_And_Expr: Relation_Expr .
   35                  | Relation_Expr . AND Relation_And_Expr

    AND  shift, and go to state 86

    $default  reduce using rule 34 (Relation_And_Expr)


State 115

   33 Bool_Expr: Relation_Expr OR Bool_Expr .

    $default  reduce using rule 33 (Bool_Expr)


State 116

   38 Relation_Expr_loop: Expression Comp Expression .

    $default  reduce using rule 38 (Relation_Expr_loop)


State 117

   49 Expression: Multiplicative_Expr SUB Expression .

    $default  reduce using rule 49 (Expression)


State 118

   50 Expression: Multiplicative_Expr ADD Expression .

    $default  reduce using rule 50 (Expression)


State 119

   57 Multiplicative_Expr: Term MULT Multiplicative_Expr .

    $default  reduce using rule 57 (Multiplicative_Expr)


State 120

   56 Multiplicative_Expr: Term DIV Multiplicative_Expr .

    $default  reduce using rule 56 (Multiplicative_Expr)


State 121

   55 Multiplicative_Expr: Term MOD Multiplicative_Expr .

    $default  reduce using rule 55 (Multiplicative_Expr)


State 122

   51 Expression_loop: Expression . COMMA Expression_loop
   52                | Expression .

    COMMA  shift, and go to state 132

    $default  reduce using rule 52 (Expression_loop)


State 123

   64 Term: Ident L_PAREN Expression_loop . R_PAREN

    R_PAREN  shift, and go to state 133


State 124

   21 Statement3: WHILE Bool_Expr BEGINLOOP Statement_loop . ENDLOOP

    ENDLOOP  shift, and go to state 134


State 125

   22 Statement4: DO BEGINLOOP Statement_loop ENDLOOP . WHILE Bool_Expr

    WHILE  shift, and go to state 135


State 126

   23 Statement5: FOR Var ASSIGN NUMBER . SEMICOLON Bool_Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement_loop ENDLOOP

    SEMICOLON  shift, and go to state 136


State 127

   68 Var_loop: Var COMMA Var_loop .

    $default  reduce using rule 68 (Var_loop)


State 128

   66 Var: Ident L_SQUARE_BRACKET Expression R_SQUARE_BRACKET .

    $default  reduce using rule 66 (Var)


State 129

   63 Term: SUB L_PAREN Expression R_PAREN .

    $default  reduce using rule 63 (Term)


State 130

   30 ElseStatement: ELSE . Statement_loop

    IDENT     shift, and go to state 4
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    Statement       go to state 37
    Statement1      go to state 38
    Statement2      go to state 39
    Statement3      go to state 40
    Statement4      go to state 41
    Statement5      go to state 42
    Statement6      go to state 43
    Statement7      go to state 44
    Statement8      go to state 45
    Statement9      go to state 46
    Statement_loop  go to state 137
    Var             go to state 48
    Ident           go to state 49


State 131

   20 Statement2: IF Bool_Expr THEN Statement_loop ElseStatement . ENDIF

    ENDIF  shift, and go to state 138


State 132

   51 Expression_loop: Expression COMMA . Expression_loop

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 72
    SUB      shift, and go to state 55

    $default  reduce using rule 53 (Expression_loop)

    Expression           go to state 122
    Expression_loop      go to state 139
    Multiplicative_Expr  go to state 62
    Term                 go to state 63
    Var                  go to state 64
    Ident                go to state 65


State 133

   64 Term: Ident L_PAREN Expression_loop R_PAREN .

    $default  reduce using rule 64 (Term)


State 134

   21 Statement3: WHILE Bool_Expr BEGINLOOP Statement_loop ENDLOOP .

    $default  reduce using rule 21 (Statement3)


State 135

   22 Statement4: DO BEGINLOOP Statement_loop ENDLOOP WHILE . Bool_Expr

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    SUB      shift, and go to state 55
    NOT      shift, and go to state 56

    Bool_Expr            go to state 140
    Relation_And_Expr    go to state 58
    Relation_Expr        go to state 59
    Relation_Expr_loop   go to state 60
    Expression           go to state 61
    Multiplicative_Expr  go to state 62
    Term                 go to state 63
    Var                  go to state 64
    Ident                go to state 65


State 136

   23 Statement5: FOR Var ASSIGN NUMBER SEMICOLON . Bool_Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement_loop ENDLOOP

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    SUB      shift, and go to state 55
    NOT      shift, and go to state 56

    Bool_Expr            go to state 141
    Relation_And_Expr    go to state 58
    Relation_Expr        go to state 59
    Relation_Expr_loop   go to state 60
    Expression           go to state 61
    Multiplicative_Expr  go to state 62
    Term                 go to state 63
    Var                  go to state 64
    Ident                go to state 65


State 137

   30 ElseStatement: ELSE Statement_loop .

    $default  reduce using rule 30 (ElseStatement)


State 138

   20 Statement2: IF Bool_Expr THEN Statement_loop ElseStatement ENDIF .

    $default  reduce using rule 20 (Statement2)


State 139

   51 Expression_loop: Expression COMMA Expression_loop .

    $default  reduce using rule 51 (Expression_loop)


State 140

   22 Statement4: DO BEGINLOOP Statement_loop ENDLOOP WHILE Bool_Expr .

    $default  reduce using rule 22 (Statement4)


State 141

   23 Statement5: FOR Var ASSIGN NUMBER SEMICOLON Bool_Expr . SEMICOLON Var ASSIGN Expression BEGINLOOP Statement_loop ENDLOOP

    SEMICOLON  shift, and go to state 142


State 142

   23 Statement5: FOR Var ASSIGN NUMBER SEMICOLON Bool_Expr SEMICOLON . Var ASSIGN Expression BEGINLOOP Statement_loop ENDLOOP

    IDENT  shift, and go to state 4

    Var    go to state 143
    Ident  go to state 49


State 143

   23 Statement5: FOR Var ASSIGN NUMBER SEMICOLON Bool_Expr SEMICOLON Var . ASSIGN Expression BEGINLOOP Statement_loop ENDLOOP

    ASSIGN  shift, and go to state 144


State 144

   23 Statement5: FOR Var ASSIGN NUMBER SEMICOLON Bool_Expr SEMICOLON Var ASSIGN . Expression BEGINLOOP Statement_loop ENDLOOP

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 51
    L_PAREN  shift, and go to state 72
    SUB      shift, and go to state 55

    Expression           go to state 145
    Multiplicative_Expr  go to state 62
    Term                 go to state 63
    Var                  go to state 64
    Ident                go to state 65


State 145

   23 Statement5: FOR Var ASSIGN NUMBER SEMICOLON Bool_Expr SEMICOLON Var ASSIGN Expression . BEGINLOOP Statement_loop ENDLOOP

    BEGINLOOP  shift, and go to state 146


State 146

   23 Statement5: FOR Var ASSIGN NUMBER SEMICOLON Bool_Expr SEMICOLON Var ASSIGN Expression BEGINLOOP . Statement_loop ENDLOOP

    IDENT     shift, and go to state 4
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    Statement       go to state 37
    Statement1      go to state 38
    Statement2      go to state 39
    Statement3      go to state 40
    Statement4      go to state 41
    Statement5      go to state 42
    Statement6      go to state 43
    Statement7      go to state 44
    Statement8      go to state 45
    Statement9      go to state 46
    Statement_loop  go to state 147
    Var             go to state 48
    Ident           go to state 49


State 147

   23 Statement5: FOR Var ASSIGN NUMBER SEMICOLON Bool_Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement_loop . ENDLOOP

    ENDLOOP  shift, and go to state 148


State 148

   23 Statement5: FOR Var ASSIGN NUMBER SEMICOLON Bool_Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement_loop ENDLOOP .

    $default  reduce using rule 23 (Statement5)
